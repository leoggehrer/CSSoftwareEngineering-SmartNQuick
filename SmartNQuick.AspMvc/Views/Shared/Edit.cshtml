@*@BaseCode*@
@{
    @using SmartNQuick.AspMvc.Modules.Handler
    @using SmartNQuick.AspMvc.Modules.Language
    @using SmartNQuick.AspMvc.Modules.Session
    @using SmartNQuick.AspMvc.Models.Modules.View
    @model SmartNQuick.AspMvc.Models.IdentityModel

    var sessionWrapper = new SessionWrapper(Context.Session);
    var controller = ViewContext.RouteData.Values["controller"].ToString();
    var action = ViewContext.RouteData.Values["action"].ToString();
    Func<string, string> translate = Translator.TranslateIt;
    Func<string, string> translateFor = pn => translate($"{controller}.{pn}");
    var title = translateFor(action);
    var ignoreProperties = new string[] { "Id", "RowVersion", "ActionError" };

    ViewData["Title"] = title;

    <h1>@title</h1>

    <div class="d-flex bg-transparent">
        <div class="p-sm-2 mr-auto">
            <h4>@translate(controller)</h4>
        </div>
    </div>
    <hr />

    @if (string.IsNullOrEmpty(ErrorHandler.LastError) == false)
    {
        <div class="alert alert-danger" role="alert">
            @ErrorHandler.GetLastErrorAndClear()
        </div>
    }

    <form asp-action="Edit" method="post">
        <div class="row">
            <div class="col-md-4">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @foreach (var item in Model.GetType().GetProperties().Where(p => p.CanWrite && ignoreProperties.Any(e => e.Equals(p.Name)) == false))
                {
                    <div class="form-group">
                        <label class="control-label" for="@item.Name">@item.Name</label>
                        <input class="form-control" type="text" id="@item.Name" name="@item.Name" value="@item.GetValue(Model)" />
                        <span class="text-danger field-validation-valid" data-valmsg-for="@item.Name" data-valmsg-replace="true"></span>
                    </div>
                }
            </div>
        </div>
        <hr />
        @await Html.PartialAsync("_SubmitBack", new SubmitBackCmd() { SubmitText = translateFor("Save"), BackText = translateFor("Back to List") })
    </form>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
