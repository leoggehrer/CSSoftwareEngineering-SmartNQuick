@*@BaseCode*@
@{
    @using CommonBase.Extensions
    @using SmartNQuick.AspMvc.Modules.Language
    @model SmartNQuick.AspMvc.Models.IdentityModel

    var controller = ViewContext.RouteData.Values["controller"].ToString();
    var action = ViewContext.RouteData.Values["action"].ToString();
    Func<string, string> translate = Translator.TranslateIt;
    Func<string, string> translateFor = pn => translate($"{controller}.{pn}");
    var ignoreProperties = new List<string> { "Id", "RowVersion", "ActionError" };

    if (ViewBag.IgnoreProperties is string[] moreIgnore)
    {
        ignoreProperties.AddRange(moreIgnore);
    }

    @foreach (var item in Model.GetType().GetAllInterfacePropertyInfos())
    {
        if (item.CanRead && ignoreProperties.Any(e => e.Equals(item.Name)) == false)
        {
            <dl class="row">
                <dt class="col-sm-2">
                    @translateFor(item.Name)
                </dt>
                <dd class="col-sm-10">
                    @item.GetValue(Model)
                </dd>
            </dl>
        }
    }
}